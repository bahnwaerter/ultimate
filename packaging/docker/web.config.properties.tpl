###############################################################################
# Autogenerated Ultimate Webbackend configuration. Do not edit!
###############################################################################

#------------------------------------------------------------------------------
# Ultimate WebBackend settings
#------------------------------------------------------------------------------
# determines the port the jetty server will be listening
PORT={{ .Env.ULTIMATE_BACKEND_PORT }}

# URL prefix, the API will be served at, e.g. /api results in
# http://localhost:PORT/api
BACKEND_ROUTE={{ .Env.ULTIMATE_BACKEND_ROUTE }}

# path to a local user settings whitelist
SETTINGS_WHITELIST={{ .Env.ULTIMATE_BACKEND_SETTINGS_WHITELIST }}

#------------------------------------------------------------------------------
# Ultimate Frontend settings
#------------------------------------------------------------------------------
# true will also serve the Frontend. If set to True, ULTIMATE_FRONTEND_PATH and
# ULTIMATE_FRONTEND_ROUTE should be set.
SERVE_WEBSITE={{ .Env.ULTIMATE_FRONTEND_SERVE }}

# path to the `WebsiteStatic` folder containing the Frontend
FRONTEND_PATH={{ .Env.ULTIMATE_FRONTEND_PATH }}

# URL prefix, the FRONTEND will be served at, e.g. /website results in
# http://localhost:PORT/website
FRONTEND_ROUTE={{ .Env.ULTIMATE_FRONTEND_ROUTE }}

#------------------------------------------------------------------------------
# Ultimate logging settings
#------------------------------------------------------------------------------
# absolute (or relative from java.class.path) path to the log file
LOG_FILE_PATH={{ .Env.ULTIMATE_LOG_PATH }}

# logging verbosity. Choose from: ALL, DEBUG, INFO, WARN, OFF
LOG_LEVEL={{ .Env.ULTIMATE_LOG_LEVEL }}

#------------------------------------------------------------------------------
# Ultimate general settings
#------------------------------------------------------------------------------
# path to a directory storing temporary files
TMP_DIR={{ .Env.ULTIMATE_DIR_TMP }}

# timeout in seconds for any request
FORCED_TIMEOUT={{ .Env.ULTIMATE_TIMEOUT }}
